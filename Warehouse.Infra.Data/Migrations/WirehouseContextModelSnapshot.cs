// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Warehouse.Infra.Data.Context;

namespace Warehouse.Infra.Data.Migrations
{
    [DbContext(typeof(WirehouseContext))]
    partial class WirehouseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Warehouse.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(360);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Warehouse.Domain.Models.Despatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("TagMachine");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("ItemNumber");

                    b.ToTable("Despatches");
                });

            modelBuilder.Entity("Warehouse.Domain.Models.Item", b =>
                {
                    b.Property<string>("ItemNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<int>("CategoryID");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(400);

                    b.Property<int>("Id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UM")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ItemNumber");

                    b.HasIndex("CategoryID");

                    b.HasIndex("VendorId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Warehouse.Domain.Models.Reciving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(250);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemNumber");

                    b.HasIndex("VendorId");

                    b.ToTable("Recivings");
                });

            modelBuilder.Entity("Warehouse.Domain.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company");

                    b.Property<string>("Direction");

                    b.Property<string>("UserName");

                    b.Property<string>("VendorContact");

                    b.Property<string>("VendorName");

                    b.Property<string>("VendorPhone");

                    b.HasKey("Id");

                    b.ToTable("Vendores");
                });

            modelBuilder.Entity("Warehouse.Domain.Models.Despatch", b =>
                {
                    b.HasOne("Warehouse.Domain.Models.Item", "Items")
                        .WithMany("Despatches")
                        .HasForeignKey("ItemNumber")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Warehouse.Domain.Models.Item", b =>
                {
                    b.HasOne("Warehouse.Domain.Models.Category", "Categories")
                        .WithMany("Items")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Warehouse.Domain.Models.Vendor", "Vendores")
                        .WithMany("Items")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Warehouse.Domain.Models.Reciving", b =>
                {
                    b.HasOne("Warehouse.Domain.Models.Item", "Items")
                        .WithMany("Recivings")
                        .HasForeignKey("ItemNumber")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Warehouse.Domain.Models.Vendor", "vendores")
                        .WithMany("Recivings")
                        .HasForeignKey("VendorId");
                });
#pragma warning restore 612, 618
        }
    }
}
